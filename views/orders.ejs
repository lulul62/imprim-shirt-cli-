<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ImprimShirt</title>
    <link href='https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Material+Icons' rel="stylesheet"
          type="text/css">
    <link href="https://unpkg.com/vuetify@0.15.7/dist/vuetify.min.css" rel="stylesheet" type="text/css">
    <link href="/stylesheets/style.css" rel="stylesheet" type="text/css">
    <link type="text/css" rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/6.8.0/sweetalert2.min.css">
    <link rel="icon" type="image/png" href="favicon-32x32.png" sizes="32x32">
</head>
<style>
    .dialog--scrollable {
        overflow: visible;
    }
</style>
<body>
<div id="app">
    <v-app>
        <v-navigation-drawer persistent v-model="drawer">
            <v-list>
                <v-list-tile v-for="(item, i) in items" :key="i" v-bind:href="item.link" value="true">
                    <v-list-tile-action>
                        <v-icon secondary v-html="item.icon"></v-icon>
                    </v-list-tile-action>
                    <v-list-tile-content>
                        <v-list-tile-title v-text="item.title"></v-list-tile-title>
                    </v-list-tile-content>
                </v-list-tile>
            </v-list>
        </v-navigation-drawer>
        <v-toolbar>
            <v-toolbar-side-icon @click.native.stop="drawer = !drawer"></v-toolbar-side-icon>
            <v-toolbar-title>Suivi des commandes</v-toolbar-title>
            <v-spacer></v-spacer>
            <v-toolbar-title>Imprim-shirt</v-toolbar-title>

        </v-toolbar>

        <template>
            <main>
                <v-container fluid style="    position: relative;
    top: 2em;">
                    <v-slide-y-transition mode="out-in">
                        <div v-if="dataLoaded === false">
                            <div class="sk-circle">
                                <div class="sk-circle1 sk-child"></div>
                                <div class="sk-circle2 sk-child"></div>
                                <div class="sk-circle3 sk-child"></div>
                                <div class="sk-circle4 sk-child"></div>
                                <div class="sk-circle5 sk-child"></div>
                                <div class="sk-circle6 sk-child"></div>
                                <div class="sk-circle7 sk-child"></div>
                                <div class="sk-circle8 sk-child"></div>
                                <div class="sk-circle9 sk-child"></div>
                                <div class="sk-circle10 sk-child"></div>
                                <div class="sk-circle11 sk-child"></div>
                                <div class="sk-circle12 sk-child"></div>
                            </div>
                        </div>
                        <template v-if="dataLoaded">
                            <v-card>
                                <v-card-title>
                                    Mes commandes
                                    <v-spacer></v-spacer>
                                    <v-text-field
                                            append-icon="search"
                                            label="Rechercher une commande"
                                            single-line
                                            hide-details
                                            v-model="search"
                                    ></v-text-field>
                                </v-card-title>
                                <v-data-table
                                        v-bind:headers="headers"
                                        v-bind:items="ordersTable"
                                        v-bind:search="search"
                                >
                                    <template slot="items" scope="props">
                                        <td>{{ props.item.reference }}</td>
                                        <td class="text-xs-right">{{ props.item.order_date }}</td>
                                        <td class="text-xs-right">{{ props.item.totalPrice }} €</td>
                                        <td class="text-xs-right">
                                            <v-btn @click.native="getCurrentOrder(props.item)" secondary light>
                                                <div style="color: white;">VOIR</div>
                                            </v-btn>
                                            <template>
                                                <v-layout row justify-center>
                                                    <v-dialog v-model="dialog" persistent width="320px"
                                                              scrollable>
                                                        <v-card>
                                                            <v-card-text>
                                                                <v-container grid-list-md>
                                                                    <v-layout wrap>


                                                                        <template>
                                                                            <v-expansion-panel>
                                                                                <v-expansion-panel-content
                                                                                        v-for="content in currentOrder.content">
                                                                                    <div slot="header">
                                                                                        {{content.gamme}}
                                                                                    </div>

                                                                                    <v-card>
                                                                                        <v-card-text
                                                                                                class="grey lighten-3">
                                                                                            <v-list-tile>
                                                                                                <v-list-tile-content>
                                                                                                    <v-list-tile-title>
                                                                                                        Sexe
                                                                                                        :
                                                                                                        {{content.gender}}
                                                                                                    </v-list-tile-title>

                                                                                                </v-list-tile-content>
                                                                                            </v-list-tile>
                                                                                            <v-list-tile>
                                                                                                <v-list-tile-content>
                                                                                                    <v-list-tile-title>
                                                                                                        Quantité
                                                                                                        :
                                                                                                        {{content.quantity}}
                                                                                                    </v-list-tile-title>

                                                                                                </v-list-tile-content>
                                                                                            </v-list-tile>
                                                                                            <v-list-tile>
                                                                                                <v-list-tile-content>
                                                                                                    <v-list-tile-title>
                                                                                                        Taille
                                                                                                        :
                                                                                                        {{content.size}}
                                                                                                    </v-list-tile-title>

                                                                                                </v-list-tile-content>
                                                                                            </v-list-tile>

                                                                                        </v-card-text>
                                                                                    </v-card>


                                                                                    <template>
                                                                                        <v-carousel :cycle="false" light
                                                                                                    hide-controls>
                                                                                            <v-carousel-item
                                                                                                    v-for="visual in content.visual"
                                                                                                    v-bind:style='{"background-color" : content.color}'
                                                                                                    v-bind:src="visual.img">
                                                                                                <img id="canvas" style="    border: none;
    position: relative;
    bottom: 85px;
    left: 5px;" v-bind:src="visual.computedCanvas" style="width : 135px; height:250px"></v-carousel-item>
                                                                                        </v-carousel>
                                                                                    </template>


                                                                                </v-expansion-panel-content>
                                                                            </v-expansion-panel>
                                                                        </template>
                                                                        <br>
                                                                    </v-layout>
                                                                </v-container>
                                                            </v-card-text>
                                                            <v-card-actions>
                                                                <v-spacer></v-spacer>
                                                                <v-btn class="blue--text darken-1" flat
                                                                       @click.native="dialog = false">Fermer
                                                                </v-btn>
                                                            </v-card-actions>
                                                        </v-card>
                                                    </v-dialog>
                                                </v-layout>
                                            </template>
                                        </td>
                                        <td class="text-xs-right">{{ props.item.state }}</td>
                                    </template>
                                    <template slot="pageText" scope="{ pageStart, pageStop }">
                                        From {{ pageStart }} to {{ pageStop }}
                                    </template>
                                </v-data-table>
                            </v-card>

                        </template>
                    </v-slide-y-transition>

                </v-container>

            </main>
            <v-bottom-nav fixed :value="true" :active.sync="e1" class="white">
                <v-dialog width="500px" v-model="contactDialog">
                    <v-btn slot="activator" flat color="teal" value="favorites">
                        <span>Effectuer un réclamation</span>
                        <v-icon>record_voice_over</v-icon>
                    </v-btn>
                    <v-card>
                        <v-card-row>
                            <v-card-title>Contact & réclamation</v-card-title>
                        </v-card-row>
                        <v-card-row>
                            <v-card-text>
                                <v-select
                                        label="Séléctionner la référence commande"
                                        required
                                        v-model="contact.orderReference"
                                        :items="orderReferenceArray"
                                ></v-select>
                                <v-select
                                        label="Objet de la réclamation"
                                        required
                                        v-model="contact.category"
                                        :items="['Etat de la livraison', 'Retour / défaut', 'Annuler la commande', 'Divers']"
                                ></v-select>
                                <v-text-field
                                        name="input-7-4"
                                        label="Message"
                                        v-model="contact.message"
                                        value="Décrivez votre demande en détail..."
                                        multi-line
                                ></v-text-field>
                                </v-flex>
                                <small>* champs obligatoires</small>
                            </v-card-text>
                        </v-card-row>
                        <v-card-row actions>
                            <v-btn class="blue--text darken-1" flat @click.native="contactDialog = false, contact = {
                    from: '',
                    orderReference: '',
                    category: '',
                    message: ''
                }">Annuler
                            </v-btn>
                            <v-btn class="blue--text darken-1" flat @click.native="sendDemands()">Envoyer</v-btn>
                        </v-card-row>
                    </v-card>
                </v-dialog>
            </v-bottom-nav>
        </template>
    </v-app>
</div>


<script src="https://unpkg.com/vue/dist/vue.js"></script>
<script src="https://unpkg.com/vuetify@0.15.7/dist/vuetify.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/vue-resource/1.3.4/vue-resource.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.4/lodash.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
<script type="text/javascript"
        src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/6.8.0/sweetalert2.min.js"></script>
<script>
    var isConnected = sessionStorage.getItem("dataKey");
    console.log(isConnected);

    if (isConnected === "" || isConnected === null) {
        window.location.href = "/";
    }

    else {
        Vue.component('page', {
            template: '#page'
        })

        var vm = new Vue({
            el: '#app',
            data: {
                drawer: true,
                fixed: false,
                baseUrlCurrentUser: "https://transfertprod-668c2.firebaseio.com/user/",
                baseUrlDemands: 'https://transfertprod-668c2.firebaseio.com/demands.json',
                items: [
                    {icon: "note_add", title: "Personnaliser un produit", link: "/product"},
                    {icon: "shopping_cart", title: "Panier", link: "/cart"},
                    {icon: 'account_circle', title: 'Gestion du profil', link: "/gestionProfil"},
                    {icon: 'shopping_basket', title: 'Suivi des commandes', link: '/orders'}
                ],
                tmp: '',
                search: '',
                pagination: {},
                headers: [
                    {
                        text: 'Réference commande',
                        align: 'left',
                        sortable: false,
                        value: 'orderRef'
                    },
                    {text: 'Date de la commande', value: 'date'},
                    {text: 'Prix (ttc)', value: 'price'},
                    {text: 'Liste des produits', value: 'product'},
                    {text: 'État de la commande', value: 'state'},
                ],
                dataLoaded: false,
                currentOrder: {},
                contact: {
                    email: '',
                    orderReference: '',
                    category: '',
                    message: ''
                },
                dialog: false,
                ordersTable: [],
                orderReferenceArray: [],
                contactDialog: false,
                currentUser: {},
                title: 'ImprimShirt'
            },
            mounted() {
                this.getCurrentUser();
            },
            methods: {
                /**
                 * Get current user and all order of it
                 **/
                getCurrentUser: function () {
                    return this.$http.get(this.baseUrlCurrentUser + isConnected + ".json").then((currentUser) => {
                        this.currentUser = currentUser.data
                        Object.keys(currentUser.data.orders).forEach((key) => {
                            this.ordersTable.push(currentUser.data.orders[key]);
                        });
                        this.contact.email = this.currentUser.email
                        this.getTotalPriceOfOrders();
                        this.getOrderListByReference();
                        this.dataLoaded = true;
                    });
                },
                /**
                 * Get all references of order and put in in array
                 **/
                getOrderListByReference() {
                    this.ordersTable.forEach(order => {
                        this.orderReferenceArray.push(order.reference)
                    })
                },
                /**
                 * sends demands for an order
                 **/
                sendDemands() {
                    this.contact.date = new Date()
                    this.$http.post(this.baseUrlDemands, this.contact).then(res => {
                        this.contactDialog = false
                        swal('', 'Votre demande à été transmise et sera traitée sous peu', 'success')
                        this.contact = {
                            from: this.currentUser.email,
                            orderReference: '',
                            category: '',
                            message: ''
                        }
                    }, (err) => {
                        swal('', 'Une erreur interne est survenue', 'error');
                    })
                },
                /**
                 * Get total price of all orders
                 */
                getTotalPriceOfOrders: function () {
                    this.ordersTable.forEach(function (order) {
                        let currentPrice = [];
                        order.order_date = moment(order.order_date).format('DD-MMM-YYYY');
                        order.content.forEach(function (product) {
                            currentPrice.push(parseFloat(product.price));
                        });
                        order.totalPrice = _.sum(currentPrice);
                    });
                },
                /**
                 * Retourne la commande selectionné par l'utilisateur.
                 * @param order
                 * @returns {boolean}
                 */
                getCurrentOrder(order) {
                    "use strict";
                    this.currentOrder = order;
                    this.dialog = true;
                },
            }
        });

    }
</script>
</body>

</html>